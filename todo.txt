HIGH
---------
- locale: localized strings

- buf: create a Buffer_Concept and rework buf to be based on it
- buf: pretty formatting for source errors
- term: module for ANSI output to terminals

MEDIUM
---------
- add directed_graph_t
- rework graphviz api

LOW
---------
- abstract: shared memory buffer between processes
- ipc: create an ipc module for low-level base
    ipc_addr_t, ipc_transport_t, ipc_

- buddy allocator

- page allocator: implement free list so pages can recycle
- page allocator/slab allocator: implement reserve function so n numbers of pages can be allocated at a time.
        this would replace passing num_pages into these up front and makes the interface (perhaps) more consistent
        with other mechanisms in the library.

- filesys: implement glob function, which will also touch the init and fini functions for the
            filesys module.
- filesys: need to open and read the xdg config file (if found) and put into a symtab_t or hashtab_t.
            also, need to read applicable env vars once at module init and put them into the
            same symtab_t/hashtab_t.
- filesys: once meta data is done (previous task), implement the remaining places::* functions

- libgfx: pull in nfd or rewrite based on nfd_extended
- libgfx: create test bed application within foundation project

DONE
----
- path: implement replace_extension function
- path: implement stem function, which returns the file name without the extension
- add bintree_t
- memory: create a public api which returns a tree structure of allocators that tools like a UI can
        invoke and create a display of allocators in a hierarchy
- add queue_t
- audit: stack_t
- fix: set_t functionality finalized & tested
- fix: symtab_t appears to be increasing the size member more often than it should so the count of
        a symtab_t is off-by-n (where n is usually <= 5) compared to a hashtab_t.
- fix: symtab_t remove needs to be rewritten to recursively visit each prefix
- ffi module
- path & filesys modules
- use new path module to grab the process filename from argv[0] in the default log system
- network
- logging
- add set_t
- add linked_list_t
- integrate iterator macros
- symtab_t: make pairs function a prefix search, defaulting to everything
- bit functions
- replace intern pool + hashtable in proxy_system
- implement symtab::find and symtab::remove
- test a few different slab size configs
- change slab system to allow config for number of pages allocated for
    each slab.  default should be 1 page.
- change stable_array and symtab to support passing in number of pages
    default is 1 page.
- slab::reset function
- symtab::reset should mark all nodes empty, free values

